import UIKit

enum Icon {
    case bankID
    case password
    case profile

    private var base64Encoded: String {
        switch self {
        case .bankID:
            return "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"
        case .password:
            return "iVBORw0KGgoAAAANSUhEUgAAAEgAAAAqCAYAAAAQ0R0WAAAAAXNSR0IArs4c6QAAAGxlWElmTU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAABAAAARgEoAAMAAAABAAIAAIdpAAQAAAABAAAATgAAAAAAAADYAAAAAQAAANgAAAABAAKgAgAEAAAAAQAAAEigAwAEAAAAAQAAACoAAAAAp85irAAAAAlwSFlzAAAhOAAAITgBRZYxYAAAABxpRE9UAAAAAgAAAAAAAAAVAAAAKAAAABUAAAAVAAAC0VVHXegAAAKdSURBVGgF7Ji5ixRREMZHRRHXC9cjEcwVBPFIFEEUDMz0PzDZQPFAEUzExFDMFMVAxEBQETzARNfIY000EIycxQvdUMED1+P3yRR8W9vT0w674jJd8NH16njz3tdVr7un0ailKwamkbUULOsR9FdlaSeB98FH8KvH8J793gBrwDiZjuUi6DVSivb7HR4OZoYO1OSMKY4f8LExSJqH8rkmaAxBqqwnQdDmmpxx5IigUTBHJO0FRb1Y2xqN9SLocE1Q2wLZVBNU3j3/jKCfU7RKuyLoEJtd18K7ko2/xjcA1gIddnpaqqf3gxFQdsZ9wK93ET1qF4EFQLl7wBtQlpt9Q8THeuN6r+Icf0XQKJMeBy5NBnlBGp8Dcz0w6QsZXwdFuRewzwftRGSfB0W52faVuFUFE12rmF+JoMtMtgvo2yxLE0Ne1GNsM1KgyOpLNlXFMPB8vXvMBC4iK5OtmEfAc4v0oz6R6RNK0D6bOKtNDHlhKy1oOfogiDPoFroqIGQ3iuf73V6B74H51RaLQcgGFM/NulorbpTa22/wpBCkjW0DLk0GvrBn7kS/mfyKPWIxq83/wuxSb5svfuNMimn3UZ1b6yx5fuMmlCAdilr8F/AcuGSCrphTd+8biM3F9ZLFqFWiuu6i60AOfEKPnLgOYnN5xSB8fvXW2tqKmTSC/Ic7ETTCYh4CnUNPWwvzfOknQcgSlOwvG5+IRK6zgb68c/wQtmgtnV3DrZj/gqC82DxWtehRG7IdJcfksXLeglNgFggZQMmxubVOW8yUIMgrQBvtdBaowvTvZpYdGIra11trCzHRviLSCbrKOJNbNK70mPfETi3msVm/w6Ki9FH/HPi+gRyvcb8CC+QYNv1n4zl6RYj5+9BfJn9XBP0GAAD//zw1SRgAAAJDSURBVO2YT0hUURTGX2oKpkGGJDh7MRdtggjcGmbQppUFMfugEGyn0aZV7VqIG8FtpOvcRJG2qXSjm5JcWIJERLkp/Pv7wgOHp+/dqzgLx3fg4557z3fun2/ePW9mkiRJBsF2JBbgeVuiE5P7Gl6jS2zHX47IvQfnLugDF4C3h3Rs7b/4XS743MWMc9HFX+4TN55vu5VTaYHesIYXp4X+PPAbifH/kSPBzGpwvgLlDtsgbRuQAJMplOibSVzFP4C8tSsu0Fs2cAaYncP5CPI2lRdbJ9eLPbI7Vy/tYew2SXnrVVSgdyze5HYdEucBXH3Kgq5V1sY7iJk9xhHv2Ak0w6YPIo4O6a/Jefo/QVqkFcbqgNkojjjjYCiAWuJmt3DEfwHSa/h+txJCNWgNzo9dTCvB2Sd8i9nE7xlrdhxdiVeOZ3xrVWCVOwdUV8yu4Ki4/wa/wBS4BMwacL4DWzfUim82gRPiKx4lUNlmDbSqD6vgbICXDo8xYJt9lA7m9PXUWF5M6wVSEY/JOXKBPuccKCvkBdqAdB+cziIzrlq232s8dOCKCfSMDfVEYBPOtwheei5dnfThvjCmV/FN0Akug37wFOjKpfkx/Rvk2dp6gcTkRD1BMRNVK6cQKPAkFQIVAsXVmqwS8f8JGgiomJV8Esavok1yvRAo842mrxRJK9gqRNoj0qLEMTvMF69qv2J3TBy1+r00C6r90LHn08+YPVbPyBPwB8ROVG08/VtQBrl2imgHUPHuOyG4xjlLoLCDKrADliKoH/caIWcAAAAASUVORK5CYII="
        case .profile:
            return "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAGxlWElmTU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAABAAAARgEoAAMAAAABAAIAAIdpAAQAAAABAAAATgAAAAAAAADYAAAAAQAAANgAAAABAAKgAgAEAAAAAQAAADCgAwAEAAAAAQAAADAAAAAADzpsYgAAAAlwSFlzAAAhOAAAITgBRZYxYAAAABxpRE9UAAAAAgAAAAAAAAAYAAAAKAAAABgAAAAYAAACSMf19vwAAAIUSURBVGgFzJfPKwVRFMcvNkIKWYjekqWSxEphYcHWilJioSgbCxtvo2woS6X8GRILyspKNmRBskTyI4n8+H7rzZvpOKM7c++859S3d+fMuZ/vue+9uTNjjL+oBKoPWoUOoQvouSCOD6AVqAeqgP5NVKGTGegG+rbUFeomIS66rNEL9zPItnFZd4q5XeVawTiM3xyaDxbzCsZYqRcxa9n4NeqooNm/PqdLtYgBGH3ENPWA/DI0DDVDQXDMHM+xRlvIO/L9UKbRBPodpDWwi3yrhXsbalirMW6Rb7RgpC5ZjzGeT0jkNso52iLWErKsy3Oo1C7aTWvC70LOlYugB728xxKI0uwSuToHJ84lQ3Lp5T2OQZRGQx5cyJBcenkN7iJfUNToBce8C7sGGWRF2fSK7mKuHqZbGNDsyJkaAsiKLoBjenqLUZCkwYY3ujFkST49vcUESNJgwRvdGLIkn48q3oJ3UWmw5Y1uDFmS72ODKLbYqRicFM+6D8iSC+hwx4aEegzl8w+Pq8OS1CMyJPsTuZrUxJiJ+8jLb2kqpjZJmgzJ3UsCsK2dU4wekcvZApQ6ziVDLoCbhvdoAFF7FOa3leYdl3M4Vzb/hFwtlEksgioNebwN8TqxDdZyjsbiL51Z8II7hzRjvnkNWjizhrUag3fkzF/0ub1pfyU2xGeYHSgPjUAtBXGch3iONVrz98i3Q4niBwAA//9o34OxAAAB7UlEQVTNls0rBVEYh8dHkvK5IKWUjSXJ0k5K2SgLpdTdsREbW1YWIn+ElA0lJclCibKzwUoKSyLRZeHr+S3ube7bufe6Zu7MvPU05+M95/29Z87MOZ73PxtiWBp+QuKReXogUusj2j0ETeKTOQYiVe4L1kZ5A74hSCLPjF+ARojFeom6DUG3lRKZgwqIxeqIOgrLsA6HcAFPUMobOsK/ExJltajpghTswgcUSuqF/kFIrNWjLAU3kC+RV/r6IdFWg7pZeABXImrvhpJsAu8ViPJjaiLePriSuKW9A/5k2qfaf5poE7RCUVkVgVbBlcQl7S3FhFTjcGYmOKKu1YnSpgnmSuKU9spCQnSYuAaOFxpUpr58b2IqXzytcmbr+JPYyTegzO3aTq5vQh91syv2Io1+4SrLudXlHFGbFlUarC69nRxroOY6LcdyvOKp6BdrE5BWHYxZm6Fkna6yvfEW9Bd0HXaTflkHVGwC836HmMsph77jjCZdwN6Ng+7o7RmHBDx17bB3py/atPW9EbCrv6eOhJkugFbnsDSuOTruaNOBFgZME4qlmMUmsKSZtxwd1jFIXTHCMF1xrA59u96Jo8M6BqkrRhim36bVca6Jrx0d1jFIXTHCMntWaat7bxBEYLGxYYnXPLqR+uOlfwGguJV3//UbjwAAAABJRU5ErkJggg=="
        }
    }

    func makeImage() -> UIImage? {
        guard let data = Data(base64Encoded: base64Encoded),
            let image = UIImage(data: data)
            else { return nil }
        return image.withRenderingMode(.alwaysTemplate)
    }
}
